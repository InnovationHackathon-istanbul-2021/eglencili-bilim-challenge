{"ast":null,"code":"var _jsxFileName = \"/home/recoded/new/eglencili-bilim-challenge/src/components/Chapters/Space/Space.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router';\nimport Sound from 'react-sound';\nimport { Btns } from '../../../assets/data/SpaceBtns';\nimport { Audios } from '../../../assets/data/SpaceAudios';\nimport Char from '../../../assets/img/char.gif';\nimport './Space.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RootFunction() {\n  _s();\n\n  let navigate = useNavigate(); // extract navigation prop here\n\n  return /*#__PURE__*/_jsxDEV(Space, {\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this); //pass to your component.\n}\n\n_s(RootFunction, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RootFunction;\n\nclass Space extends React.Component {\n  constructor() {\n    super();\n\n    this.handleShowBtn = id => {\n      let btn = document.getElementById(id);\n      if (btn) btn.style.display = 'block';\n    };\n\n    this.handlePlayAudio = id => {\n      let btns = document.querySelectorAll('.planet-1 .btn');\n\n      for (let btn of btns) {\n        btn.style.display = 'none';\n      }\n\n      let stateCopy = Object.assign({}, this.state);\n\n      for (let i in stateCopy) {\n        if (i === id) this.setState({\n          [i]: 'PLAYING'\n        });else this.setState({\n          [i]: 'STOPPED'\n        });\n      }\n\n      if (id === 'audio4') {\n        let main = document.querySelector('.planet-1');\n        main.classList.add('animate__bounceOutLeft');\n        this.props.navigate('/experiment');\n      }\n    };\n\n    this.state = {\n      audio1: 'STOPPED',\n      audio2: 'STOPPED',\n      audio3: 'STOPPED',\n      audio4: 'STOPPED'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planet-1 animate__animated\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-overlay char-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Char,\n        alt: \"space-man\",\n        className: \"char animate__animated animate__zoomInUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), Btns.map(btn => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: btn.id,\n          className: \"btn animate__animated fire\",\n          onClick: () => this.handlePlayAudio(btn.open),\n          children: btn.text\n        }, btn.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }), Audios.map(audio => {\n        return /*#__PURE__*/_jsxDEV(Sound, {\n          url: audio.url,\n          playStatus: this.state[audio.id],\n          onFinishedPlaying: () => this.handleShowBtn(audio.btn)\n        }, audio.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RootFunction\");","map":{"version":3,"sources":["/home/recoded/new/eglencili-bilim-challenge/src/components/Chapters/Space/Space.jsx"],"names":["React","useNavigate","Sound","Btns","Audios","Char","RootFunction","navigate","Space","Component","constructor","handleShowBtn","id","btn","document","getElementById","style","display","handlePlayAudio","btns","querySelectorAll","stateCopy","Object","assign","state","i","setState","main","querySelector","classList","add","props","audio1","audio2","audio3","audio4","render","map","open","text","audio","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAO,aAAP;;AAGA,eAAe,SAASC,YAAT,GAAyB;AAAA;;AACtC,MAAIC,QAAQ,GAAGN,WAAW,EAA1B,CADsC,CACT;;AAC7B,sBAAO,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAEM;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP,CAFsC,CAED;AACtC;;GAHuBD,Y;UACPL,W;;;KADOK,Y;;AAKxB,MAAME,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAKfC,aALe,GAKCC,EAAE,IAAI;AACpB,UAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAV;AACA,UAAIC,GAAJ,EAASA,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,OAApB;AACV,KARc;;AAAA,SAUfC,eAVe,GAUGN,EAAE,IAAI;AACtB,UAAIO,IAAI,GAAGL,QAAQ,CAACM,gBAAT,CAA0B,gBAA1B,CAAX;;AACA,WAAK,IAAIP,GAAT,IAAgBM,IAAhB,EAAsB;AACpBN,QAAAA,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACD;;AACD,UAAII,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAvB,CAAhB;;AACA,WAAK,IAAIC,CAAT,IAAcJ,SAAd,EAAyB;AACvB,YAAII,CAAC,KAAKb,EAAV,EAAc,KAAKc,QAAL,CAAc;AAAE,WAACD,CAAD,GAAK;AAAP,SAAd,EAAd,KACK,KAAKC,QAAL,CAAc;AAAE,WAACD,CAAD,GAAK;AAAP,SAAd;AACN;;AAED,UAAIb,EAAE,KAAK,QAAX,EAAqB;AACnB,YAAIe,IAAI,GAAGb,QAAQ,CAACc,aAAT,CAAuB,WAAvB,CAAX;AACAD,QAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,wBAAnB;AACA,aAAKC,KAAL,CAAWxB,QAAX,CAAoB,aAApB;AACD;AACF,KA1Bc;;AAEb,SAAKiB,KAAL,GAAa;AAAEQ,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,MAAM,EAAE,SAA7B;AAAwCC,MAAAA,MAAM,EAAE,SAAhD;AAA2DC,MAAAA,MAAM,EAAE;AAAnE,KAAb;AACD;;AAyBDC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,GAAG,EAAE/B,IADP;AAEE,QAAA,GAAG,EAAC,WAFN;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAHF,EAQGF,IAAI,CAACkC,GAAL,CAASxB,GAAG,IAAI;AACf,4BACE;AAEE,UAAA,EAAE,EAAEA,GAAG,CAACD,EAFV;AAGE,UAAA,SAAS,EAAC,4BAHZ;AAIE,UAAA,OAAO,EAAE,MAAM,KAAKM,eAAL,CAAqBL,GAAG,CAACyB,IAAzB,CAJjB;AAAA,oBAMGzB,GAAG,CAAC0B;AANP,WACO1B,GAAG,CAACD,EADX;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA,CARH,EAoBGR,MAAM,CAACiC,GAAP,CAAWG,KAAK,IAAI;AACnB,4BACE,QAAC,KAAD;AAEE,UAAA,GAAG,EAAEA,KAAK,CAACC,GAFb;AAGE,UAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWgB,KAAK,CAAC5B,EAAjB,CAHd;AAIE,UAAA,iBAAiB,EAAE,MAAM,KAAKD,aAAL,CAAmB6B,KAAK,CAAC3B,GAAzB;AAJ3B,WACO2B,KAAK,CAAC5B,EADb;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA,CApBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AA/DiC","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router';\r\nimport Sound from 'react-sound'\r\nimport { Btns } from '../../../assets/data/SpaceBtns'\r\nimport { Audios } from '../../../assets/data/SpaceAudios'\r\nimport Char from '../../../assets/img/char.gif'\r\nimport './Space.css'\r\n\r\n\r\nexport default function RootFunction () {\r\n  let navigate = useNavigate();// extract navigation prop here\r\n  return <Space navigate={navigate} /> //pass to your component.\r\n}\r\n\r\nclass Space extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.state = { audio1: 'STOPPED', audio2: 'STOPPED', audio3: 'STOPPED', audio4: 'STOPPED' }\r\n  }\r\n\r\n  handleShowBtn = id => {\r\n    let btn = document.getElementById(id)\r\n    if (btn) btn.style.display = 'block'\r\n  }\r\n\r\n  handlePlayAudio = id => {\r\n    let btns = document.querySelectorAll('.planet-1 .btn')\r\n    for (let btn of btns) {\r\n      btn.style.display = 'none'\r\n    }\r\n    let stateCopy = Object.assign({}, this.state)\r\n    for (let i in stateCopy) {\r\n      if (i === id) this.setState({ [i]: 'PLAYING' })\r\n      else this.setState({ [i]: 'STOPPED' })\r\n    }\r\n\r\n    if (id === 'audio4') {\r\n      let main = document.querySelector('.planet-1')\r\n      main.classList.add('animate__bounceOutLeft')\r\n      this.props.navigate('/experiment')\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='planet-1 animate__animated'>\r\n        <div className='color-overlay'></div>\r\n        <div className='color-overlay char-overlay'></div>\r\n        <img\r\n          src={Char}\r\n          alt='space-man'\r\n          className='char animate__animated animate__zoomInUp'\r\n        />\r\n        {Btns.map(btn => {\r\n          return (\r\n            <button\r\n              key={btn.id}\r\n              id={btn.id}\r\n              className='btn animate__animated fire'\r\n              onClick={() => this.handlePlayAudio(btn.open)}\r\n            >\r\n              {btn.text}\r\n            </button>\r\n          )\r\n        })}\r\n        {Audios.map(audio => {\r\n          return (\r\n            <Sound\r\n              key={audio.id}\r\n              url={audio.url}\r\n              playStatus={this.state[audio.id]}\r\n              onFinishedPlaying={() => this.handleShowBtn(audio.btn)}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}