{"ast":null,"code":"var _jsxFileName = \"/home/recoded/new/eglencili-bilim-challenge/src/components/Games/Images.js\";\nimport React from \"react\";\nimport { images } from \"./Images/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Images extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.characters = [];\n\n    this.handleClick = event => {\n      let character = event.target;\n\n      if (character.getAttribute(\"check\") === \"found\") {\n        return;\n      }\n\n      if (character !== this.characters[0]) {\n        this.switch(character);\n        this.characters.push(character);\n      } else {\n        this.switch(character);\n        this.characters = [];\n      }\n\n      if (this.characters.length > 2) {\n        if (!this.checkName(this.characters[0], this.characters[1])) {\n          this.switch(this.characters[0]);\n          this.switch(this.characters[1]);\n          this.characters.shift();\n          this.characters.shift();\n        } else {\n          this.characters.shift();\n          this.characters.shift();\n        }\n      }\n\n      let allPictures = document.getElementsByClassName(\"image-blank\");\n\n      if (allPictures.length < 1) {\n        this.props.endGame(true);\n        let reset = document.getElementsByClassName(\"image\");\n\n        for (let i = 0; i < reset.length; i++) {\n          reset[i].classList.add(\"image-blank\");\n          reset[i].setAttribute(\"check\", \"false\");\n          this.characters = [];\n        }\n      }\n    };\n\n    this.checkName = (character1, character2) => {\n      if (character1.getAttribute(\"name\") === character2.getAttribute(\"name\")) {\n        character1.setAttribute(\"check\", \"found\");\n        character2.setAttribute(\"check\", \"found\");\n        return true;\n      }\n\n      return false;\n    };\n\n    this.switch = target => {\n      if (target.getAttribute(\"check\") === \"true\") {\n        target.setAttribute(\"check\", \"false\");\n        target.classList.add(\"image-blank\");\n      } else {\n        target.setAttribute(\"check\", \"true\");\n        target.classList.remove(\"image-blank\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: images.sort(() => Math.random() - 0.5).map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image image-blank\",\n          name: element.name,\n          style: {\n            background: `url(${element.pic})`\n          },\n          check: \"false\",\n          onClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Images;","map":{"version":3,"sources":["/home/recoded/new/eglencili-bilim-challenge/src/components/Games/Images.js"],"names":["React","images","Images","Component","characters","handleClick","event","character","target","getAttribute","switch","push","length","checkName","shift","allPictures","document","getElementsByClassName","props","endGame","reset","i","classList","add","setAttribute","character1","character2","remove","render","sort","Math","random","map","element","name","background","pic"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,UADmC,GACtB,EADsB;;AAAA,SAEnCC,WAFmC,GAEpBC,KAAD,IAAW;AACvB,UAAIC,SAAS,GAAGD,KAAK,CAACE,MAAtB;;AACA,UAAID,SAAS,CAACE,YAAV,CAAuB,OAAvB,MAAoC,OAAxC,EAAiD;AAC/C;AACD;;AAED,UAAIF,SAAS,KAAK,KAAKH,UAAL,CAAgB,CAAhB,CAAlB,EAAsC;AACpC,aAAKM,MAAL,CAAYH,SAAZ;AACA,aAAKH,UAAL,CAAgBO,IAAhB,CAAqBJ,SAArB;AACD,OAHD,MAGO;AACL,aAAKG,MAAL,CAAYH,SAAZ;AACA,aAAKH,UAAL,GAAkB,EAAlB;AACD;;AAED,UAAI,KAAKA,UAAL,CAAgBQ,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,YAAI,CAAC,KAAKC,SAAL,CAAe,KAAKT,UAAL,CAAgB,CAAhB,CAAf,EAAmC,KAAKA,UAAL,CAAgB,CAAhB,CAAnC,CAAL,EAA6D;AAC3D,eAAKM,MAAL,CAAY,KAAKN,UAAL,CAAgB,CAAhB,CAAZ;AACA,eAAKM,MAAL,CAAY,KAAKN,UAAL,CAAgB,CAAhB,CAAZ;AACA,eAAKA,UAAL,CAAgBU,KAAhB;AACA,eAAKV,UAAL,CAAgBU,KAAhB;AACD,SALD,MAKO;AACL,eAAKV,UAAL,CAAgBU,KAAhB;AACA,eAAKV,UAAL,CAAgBU,KAAhB;AACD;AACF;;AACD,UAAIC,WAAW,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAlB;;AACA,UAAIF,WAAW,CAACH,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,aAAKM,KAAL,CAAWC,OAAX,CAAmB,IAAnB;AACA,YAAIC,KAAK,GAAGJ,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAZ;;AACA,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACR,MAA1B,EAAkCS,CAAC,EAAnC,EAAuC;AACrCD,UAAAA,KAAK,CAACC,CAAD,CAAL,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,aAAvB;AACAH,UAAAA,KAAK,CAACC,CAAD,CAAL,CAASG,YAAT,CAAsB,OAAtB,EAA+B,OAA/B;AACA,eAAKpB,UAAL,GAAkB,EAAlB;AACD;AACF;AACF,KArCkC;;AAAA,SAuCnCS,SAvCmC,GAuCvB,CAACY,UAAD,EAAaC,UAAb,KAA4B;AACtC,UAAID,UAAU,CAAChB,YAAX,CAAwB,MAAxB,MAAoCiB,UAAU,CAACjB,YAAX,CAAwB,MAAxB,CAAxC,EAAyE;AACvEgB,QAAAA,UAAU,CAACD,YAAX,CAAwB,OAAxB,EAAiC,OAAjC;AACAE,QAAAA,UAAU,CAACF,YAAX,CAAwB,OAAxB,EAAiC,OAAjC;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KA9CkC;;AAAA,SAgDnCd,MAhDmC,GAgDzBF,MAAD,IAAY;AACnB,UAAIA,MAAM,CAACC,YAAP,CAAoB,OAApB,MAAiC,MAArC,EAA6C;AAC3CD,QAAAA,MAAM,CAACgB,YAAP,CAAoB,OAApB,EAA6B,OAA7B;AACAhB,QAAAA,MAAM,CAACc,SAAP,CAAiBC,GAAjB,CAAqB,aAArB;AACD,OAHD,MAGO;AACLf,QAAAA,MAAM,CAACgB,YAAP,CAAoB,OAApB,EAA6B,MAA7B;AACAhB,QAAAA,MAAM,CAACc,SAAP,CAAiBK,MAAjB,CAAwB,aAAxB;AACD;AACF,KAxDkC;AAAA;;AAyDnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACG3B,MAAM,CACJ4B,IADF,CACO,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAD7B,EAEEC,GAFF,CAEOC,OAAD,IAAa;AAChB,4BACE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,IAAI,EAAEA,OAAO,CAACC,IAFhB;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAG,OAAMF,OAAO,CAACG,GAAI;AAAjC,WAHT;AAIE,UAAA,KAAK,EAAC,OAJR;AAKE,UAAA,OAAO,EAAE,KAAK/B;AALhB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAZF;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA3EkC;;AA6ErC,eAAeH,MAAf","sourcesContent":["import React from \"react\";\nimport { images } from \"./Images/index\";\n\nclass Images extends React.Component {\n  characters = [];\n  handleClick = (event) => {\n    let character = event.target;\n    if (character.getAttribute(\"check\") === \"found\") {\n      return;\n    }\n\n    if (character !== this.characters[0]) {\n      this.switch(character);\n      this.characters.push(character);\n    } else {\n      this.switch(character);\n      this.characters = [];\n    }\n\n    if (this.characters.length > 2) {\n      if (!this.checkName(this.characters[0], this.characters[1])) {\n        this.switch(this.characters[0]);\n        this.switch(this.characters[1]);\n        this.characters.shift();\n        this.characters.shift();\n      } else {\n        this.characters.shift();\n        this.characters.shift();\n      }\n    }\n    let allPictures = document.getElementsByClassName(\"image-blank\");\n    if (allPictures.length < 1) {\n      this.props.endGame(true);\n      let reset = document.getElementsByClassName(\"image\");\n      for (let i = 0; i < reset.length; i++) {\n        reset[i].classList.add(\"image-blank\");\n        reset[i].setAttribute(\"check\", \"false\");\n        this.characters = [];\n      }\n    }\n  };\n\n  checkName = (character1, character2) => {\n    if (character1.getAttribute(\"name\") === character2.getAttribute(\"name\")) {\n      character1.setAttribute(\"check\", \"found\");\n      character2.setAttribute(\"check\", \"found\");\n      return true;\n    }\n    return false;\n  };\n\n  switch = (target) => {\n    if (target.getAttribute(\"check\") === \"true\") {\n      target.setAttribute(\"check\", \"false\");\n      target.classList.add(\"image-blank\");\n    } else {\n      target.setAttribute(\"check\", \"true\");\n      target.classList.remove(\"image-blank\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"images\">\n        {images\n          .sort(() => Math.random() - 0.5)\n          .map((element) => {\n            return (\n              <div\n                className=\"image image-blank\"\n                name={element.name}\n                style={{ background: `url(${element.pic})` }}\n                check=\"false\"\n                onClick={this.handleClick}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}